// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// NRcalcCpp
arma::mat NRcalcCpp(arma::mat df, double Bp, double B0pd, double B1pd, double B2pd, double CEXP, double BpOpp, double FC, double fs, double ssAC, int predInd, int rr, int expCol, int yldCol, int proCol, int NRcol, int NRminCol, int NRoppCol, int NRfsCol, int AAmin);
RcppExport SEXP _OFPE_NRcalcCpp(SEXP dfSEXP, SEXP BpSEXP, SEXP B0pdSEXP, SEXP B1pdSEXP, SEXP B2pdSEXP, SEXP CEXPSEXP, SEXP BpOppSEXP, SEXP FCSEXP, SEXP fsSEXP, SEXP ssACSEXP, SEXP predIndSEXP, SEXP rrSEXP, SEXP expColSEXP, SEXP yldColSEXP, SEXP proColSEXP, SEXP NRcolSEXP, SEXP NRminColSEXP, SEXP NRoppColSEXP, SEXP NRfsColSEXP, SEXP AAminSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type df(dfSEXP);
    Rcpp::traits::input_parameter< double >::type Bp(BpSEXP);
    Rcpp::traits::input_parameter< double >::type B0pd(B0pdSEXP);
    Rcpp::traits::input_parameter< double >::type B1pd(B1pdSEXP);
    Rcpp::traits::input_parameter< double >::type B2pd(B2pdSEXP);
    Rcpp::traits::input_parameter< double >::type CEXP(CEXPSEXP);
    Rcpp::traits::input_parameter< double >::type BpOpp(BpOppSEXP);
    Rcpp::traits::input_parameter< double >::type FC(FCSEXP);
    Rcpp::traits::input_parameter< double >::type fs(fsSEXP);
    Rcpp::traits::input_parameter< double >::type ssAC(ssACSEXP);
    Rcpp::traits::input_parameter< int >::type predInd(predIndSEXP);
    Rcpp::traits::input_parameter< int >::type rr(rrSEXP);
    Rcpp::traits::input_parameter< int >::type expCol(expColSEXP);
    Rcpp::traits::input_parameter< int >::type yldCol(yldColSEXP);
    Rcpp::traits::input_parameter< int >::type proCol(proColSEXP);
    Rcpp::traits::input_parameter< int >::type NRcol(NRcolSEXP);
    Rcpp::traits::input_parameter< int >::type NRminCol(NRminColSEXP);
    Rcpp::traits::input_parameter< int >::type NRoppCol(NRoppColSEXP);
    Rcpp::traits::input_parameter< int >::type NRfsCol(NRfsColSEXP);
    Rcpp::traits::input_parameter< int >::type AAmin(AAminSEXP);
    rcpp_result_gen = Rcpp::wrap(NRcalcCpp(df, Bp, B0pd, B1pd, B2pd, CEXP, BpOpp, FC, fs, ssAC, predInd, rr, expCol, yldCol, proCol, NRcol, NRminCol, NRoppCol, NRfsCol, AAmin));
    return rcpp_result_gen;
END_RCPP
}
// derivFFoptCpp
arma::mat derivFFoptCpp(arma::mat NRff, int rr, double fieldsize, double CEXP);
RcppExport SEXP _OFPE_derivFFoptCpp(SEXP NRffSEXP, SEXP rrSEXP, SEXP fieldsizeSEXP, SEXP CEXPSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type NRff(NRffSEXP);
    Rcpp::traits::input_parameter< int >::type rr(rrSEXP);
    Rcpp::traits::input_parameter< double >::type fieldsize(fieldsizeSEXP);
    Rcpp::traits::input_parameter< double >::type CEXP(CEXPSEXP);
    rcpp_result_gen = Rcpp::wrap(derivFFoptCpp(NRff, rr, fieldsize, CEXP));
    return rcpp_result_gen;
END_RCPP
}
// derivNRoptCpp
arma::mat derivNRoptCpp(arma::mat NRdf, arma::mat NRoptDat, arma::mat Nrates, int rr, int cc, double CEXP);
RcppExport SEXP _OFPE_derivNRoptCpp(SEXP NRdfSEXP, SEXP NRoptDatSEXP, SEXP NratesSEXP, SEXP rrSEXP, SEXP ccSEXP, SEXP CEXPSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type NRdf(NRdfSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type NRoptDat(NRoptDatSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Nrates(NratesSEXP);
    Rcpp::traits::input_parameter< int >::type rr(rrSEXP);
    Rcpp::traits::input_parameter< int >::type cc(ccSEXP);
    Rcpp::traits::input_parameter< double >::type CEXP(CEXPSEXP);
    rcpp_result_gen = Rcpp::wrap(derivNRoptCpp(NRdf, NRoptDat, Nrates, rr, cc, CEXP));
    return rcpp_result_gen;
END_RCPP
}
// selectDatCpp
arma::mat selectDatCpp(arma::mat dat, int rr, int prec_cy_1, int prec_cy_2, int prec_py_1, int prec_py_2, int gdd_cy_1, int gdd_cy_2, int gdd_py_1, int gdd_py_2, int veg_cy_1, int veg_cy_2, int veg_py_1, int veg_py_2, int veg_2py_1, int veg_2py_2);
RcppExport SEXP _OFPE_selectDatCpp(SEXP datSEXP, SEXP rrSEXP, SEXP prec_cy_1SEXP, SEXP prec_cy_2SEXP, SEXP prec_py_1SEXP, SEXP prec_py_2SEXP, SEXP gdd_cy_1SEXP, SEXP gdd_cy_2SEXP, SEXP gdd_py_1SEXP, SEXP gdd_py_2SEXP, SEXP veg_cy_1SEXP, SEXP veg_cy_2SEXP, SEXP veg_py_1SEXP, SEXP veg_py_2SEXP, SEXP veg_2py_1SEXP, SEXP veg_2py_2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type dat(datSEXP);
    Rcpp::traits::input_parameter< int >::type rr(rrSEXP);
    Rcpp::traits::input_parameter< int >::type prec_cy_1(prec_cy_1SEXP);
    Rcpp::traits::input_parameter< int >::type prec_cy_2(prec_cy_2SEXP);
    Rcpp::traits::input_parameter< int >::type prec_py_1(prec_py_1SEXP);
    Rcpp::traits::input_parameter< int >::type prec_py_2(prec_py_2SEXP);
    Rcpp::traits::input_parameter< int >::type gdd_cy_1(gdd_cy_1SEXP);
    Rcpp::traits::input_parameter< int >::type gdd_cy_2(gdd_cy_2SEXP);
    Rcpp::traits::input_parameter< int >::type gdd_py_1(gdd_py_1SEXP);
    Rcpp::traits::input_parameter< int >::type gdd_py_2(gdd_py_2SEXP);
    Rcpp::traits::input_parameter< int >::type veg_cy_1(veg_cy_1SEXP);
    Rcpp::traits::input_parameter< int >::type veg_cy_2(veg_cy_2SEXP);
    Rcpp::traits::input_parameter< int >::type veg_py_1(veg_py_1SEXP);
    Rcpp::traits::input_parameter< int >::type veg_py_2(veg_py_2SEXP);
    Rcpp::traits::input_parameter< int >::type veg_2py_1(veg_2py_1SEXP);
    Rcpp::traits::input_parameter< int >::type veg_2py_2(veg_2py_2SEXP);
    rcpp_result_gen = Rcpp::wrap(selectDatCpp(dat, rr, prec_cy_1, prec_cy_2, prec_py_1, prec_py_2, gdd_cy_1, gdd_cy_2, gdd_py_1, gdd_py_2, veg_cy_1, veg_cy_2, veg_py_1, veg_py_2, veg_2py_1, veg_2py_2));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_OFPE_NRcalcCpp", (DL_FUNC) &_OFPE_NRcalcCpp, 20},
    {"_OFPE_derivFFoptCpp", (DL_FUNC) &_OFPE_derivFFoptCpp, 4},
    {"_OFPE_derivNRoptCpp", (DL_FUNC) &_OFPE_derivNRoptCpp, 6},
    {"_OFPE_selectDatCpp", (DL_FUNC) &_OFPE_selectDatCpp, 16},
    {NULL, NULL, 0}
};

RcppExport void R_init_OFPE(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
